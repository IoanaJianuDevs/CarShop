// <auto-generated />
using CarShop.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarShop.Migrations
{
    [DbContext(typeof(CarContext))]
    partial class CarContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarShop.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsElectric")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarTypeId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Honda",
                            CarTypeId = 5,
                            Color = "Blue",
                            IsElectric = false,
                            Model = "Civic",
                            NumberOfDoors = 4,
                            Price = 15000.5m,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Tesla",
                            CarTypeId = 1,
                            Color = "Red",
                            IsElectric = true,
                            Model = "Model 3",
                            NumberOfDoors = 4,
                            Price = 500.0m,
                            Year = 2024
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Ford",
                            CarTypeId = 4,
                            Color = "Black",
                            IsElectric = false,
                            Model = "Mustang",
                            NumberOfDoors = 2,
                            Price = 2000.0m,
                            Year = 2023
                        },
                        new
                        {
                            Id = 4,
                            Brand = "Toyota",
                            CarTypeId = 2,
                            Color = "Silver",
                            IsElectric = false,
                            Model = "RAV4",
                            NumberOfDoors = 4,
                            Price = 30000.0m,
                            Year = 2021
                        });
                });

            modelBuilder.Entity("CarShop.Models.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SUV(SportUtilityVehicle)"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hatchback"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Coupe"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CompactCar"
                        });
                });

            modelBuilder.Entity("CarShop.Models.Car", b =>
                {
                    b.HasOne("CarShop.Models.CarType", "CarType")
                        .WithMany()
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarType");
                });
#pragma warning restore 612, 618
        }
    }
}
